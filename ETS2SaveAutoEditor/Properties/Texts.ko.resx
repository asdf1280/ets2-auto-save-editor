<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MainWindow_Button_RefreshProfiles" xml:space="preserve">
    <value>새로고침</value>
  </data>
  <data name="MainWindow_Label_SaveInfoName" xml:space="preserve">
    <value>이름</value>
  </data>
  <data name="MainWindow_Button_LoadSave" xml:space="preserve">
    <value>열기</value>
  </data>
  <data name="MainWindow_Label_SaveInfoDir" xml:space="preserve">
    <value>폴더</value>
  </data>
  <data name="MainWindow_Label_SaveInfoDate" xml:space="preserve">
    <value>날짜</value>
  </data>
  <data name="MainWindow_Button_RefreshSaves" xml:space="preserve">
    <value>새로고침</value>
  </data>
  <data name="MainWindow_Label_SelectProfile" xml:space="preserve">
    <value>프로필 선택</value>
  </data>
  <data name="MainWindow_Label_SelectSave" xml:space="preserve">
    <value>세이브 선택</value>
  </data>
  <data name="MainWindow_Label_SelectTask" xml:space="preserve">
    <value>작업 선택</value>
  </data>
  <data name="MainWindow_Button_ExecuteTask" xml:space="preserve">
    <value>실행</value>
  </data>
  <data name="MainWindow_Button_AboutASE" xml:space="preserve">
    <value>ASE 정보...</value>
  </data>
  <data name="TaskDefs_MoneySet_1" xml:space="preserve">
    <value>자산 설정</value>
  </data>
  <data name="TaskDefs_MoneySet_2" xml:space="preserve">
    <value>게임 내 자산을 원하는 대로 설정합니다.</value>
  </data>
  <data name="TaskDefs_SpecialCCTask_1" xml:space="preserve">
    <value>이벤트 CC 도구</value>
  </data>
  <data name="TaskDefs_VehicleSharing_2" xml:space="preserve">
    <value>세이브 파일을 망가뜨릴 걱정 없이 트럭과 트레일러를 쉽게 내보내고 가져올 수 있습니다.</value>
  </data>
  <data name="TaskDefs_VehicleSharing_1" xml:space="preserve">
    <value>차량 공유</value>
  </data>
  <data name="TaskDefs_TeleportToCargo_1" xml:space="preserve">
    <value>작업 목적지로 순간이동</value>
  </data>
  <data name="TaskDefs_ConnectTrailerInstantly_2" xml:space="preserve">
    <value>할당된 트레일러가 트럭에 즉시 연결되도록 합니다. 뒤에 직선으로 트레일러를 배치할 공간이 충분한지 확인하세요!</value>
  </data>
  <data name="TaskDefs_ConnectTrailerInstantly_1" xml:space="preserve">
    <value>현 위치에 트레일러 연결</value>
  </data>
  <data name="TaskDefs_DecodePosition_2" xml:space="preserve">
    <value>현재 클립보드의 공유된 위치 정보를 사람이 읽을 수 있는 10진수 형식으로 디코딩합니다. 단위는 미터입니다.</value>
  </data>
  <data name="TaskDefs_DecodePosition_1" xml:space="preserve">
    <value>위치 정보 해석</value>
  </data>
  <data name="TaskDefs_ReducePosition_2" xml:space="preserve">
    <value>위치 정보 코드에서 트레일러 정보를 제외하여 길이를 줄입니다. 위치 정보를 생성할 당시 뒤에 긴 공간이 있었다면 필요하지 않습니다.</value>
  </data>
  <data name="TaskDefs_ReducePosition_1" xml:space="preserve">
    <value>위치 정보 압축</value>
  </data>
  <data name="TaskDefs_ImportPosition_2" xml:space="preserve">
    <value>공유된 플레이어 위치 정보를 클립보드에서 불러와 현재 세이브에 적용합니다. 트럭이 해당 위치로 순간이동합니다.</value>
  </data>
  <data name="TaskDefs_ImportPosition_1" xml:space="preserve">
    <value>위치 정보 가져오기</value>
  </data>
  <data name="TaskDefs_SharePosition_2" xml:space="preserve">
    <value>플레이어의 트럭과 트레일러의 위치를 클립보드에 복사합니다. 코드를 공유함으로써 다른 사람에게 위치 정보를 공유할 수 있습니다.</value>
  </data>
  <data name="TaskDefs_ImportNavigation_2" xml:space="preserve">
    <value>클립보드에서 내비게이션 경유지 정보 코드를 불러와 세이브에 적용합니다.</value>
  </data>
  <data name="TaskDefs_ImportNavigation_1" xml:space="preserve">
    <value>내비게이션 가져오기</value>
  </data>
  <data name="TaskDefs_ShareNavigation_2" xml:space="preserve">
    <value>현재 설정된 내비게이션 경유지를 클립보드에 복사합니다. 다른 사람에게 공유할 수 있습니다.</value>
  </data>
  <data name="TaskDefs_ShareNavigation_1" xml:space="preserve">
    <value>내비게이션 내보내기</value>
  </data>
  <data name="TaskDefs_FixEverything_2" xml:space="preserve">
    <value>현 세이브에 있는 모든 트럭과 트레일러의 대미지를 수리합니다.

1.49 경고 - 중고 트럭 매물들도 모조리 수리됩니다!</value>
  </data>
  <data name="TaskDefs_FixEverything_1" xml:space="preserve">
    <value>모조리 수리</value>
  </data>
  <data name="TaskDefs_RefuelUnreal_2" xml:space="preserve">
    <value>현재 트럭의 연료(또는 배터리) 잔량을 탱크의 1000배로 설정합니다. 게임 설정에서 현실적인 연료 소비를 꺼야 합니다.</value>
  </data>
  <data name="TaskDefs_RefuelUnreal_1" xml:space="preserve">
    <value>현재 차량 무한 연료</value>
  </data>
  <data name="TaskDefs_RefuelReal_2" xml:space="preserve">
    <value>현재 트럭의 연료(또는 배터리) 잔량을 100%로 설정합니다.</value>
  </data>
  <data name="TaskDefs_RefuelReal_1" xml:space="preserve">
    <value>현재 차량 주유</value>
  </data>
  <data name="TaskDefs_TruckEngineSet_2" xml:space="preserve">
    <value>트럭의 엔진을 선택한 것으로 바꿉니다.</value>
  </data>
  <data name="TaskDefs_ExecuteVPS_2" xml:space="preserve">
    <value>클립보드에 복사된 VPS(Vehicle Placement Script, 차량 배치 스크립트)를 실행합니다. 작업을 실행하기 전에 전체 코드를 클립보드에 복사하세요.</value>
  </data>
  <data name="TaskDefs_ExecuteVPS_1" xml:space="preserve">
    <value>VPS 실행</value>
  </data>
  <data name="TaskDefs_UnlockScreens_2" xml:space="preserve">
    <value>스킬을 포함한 잠긴 GUI를 모두 활성화합니다. 정상적인 경우 비활성화되어야 하는 GUI까지 활성화될 수 있습니다.</value>
  </data>
  <data name="TaskDefs_TruckEngineSet_1" xml:space="preserve">
    <value>트럭 엔진 설정</value>
  </data>
  <data name="TaskDefs_UnlockScreens_1" xml:space="preserve">
    <value>모든 UI 해금</value>
  </data>
  <data name="TaskDefs_ExpSet_2" xml:space="preserve">
    <value>경험치를 원하는 대로 설정합니다.</value>
  </data>
  <data name="TaskDefs_ExpSet_1" xml:space="preserve">
    <value>경험치 지정</value>
  </data>
  <data name="TaskDefs_SetCargoMass_2" xml:space="preserve">
    <value>현재 연결된 트레일러의 화물 질량 수치를 원하는 값으로 변경합니다.</value>
  </data>
  <data name="TaskDefs_SetCargoMass_1" xml:space="preserve">
    <value>트레일러 화물 질량 변경</value>
  </data>
  <data name="TaskDefs_VehicleStealer_2" xml:space="preserve">
    <value>작업에서 트레일러 또는 트럭을 훔칩니다. 트레일러가 당신의 소유라면, 실려 있는 화물을 빼돌립니다.</value>
  </data>
  <data name="TaskDefs_VehicleStealer_1" xml:space="preserve">
    <value>회사 차 빼앗기</value>
  </data>
  <data name="TaskDefs_SpecialCCTask_2" xml:space="preserve">
    <value>사용하기 전 동봉된 설명을 확인하세요! 그렇지 않으면 돌이킬 수 없는 데이터 손상이 발생할 수 있습니다.</value>
  </data>
  <data name="TaskDefs_TeleportToCargo_2" xml:space="preserve">
    <value>TruckersMP의 Job Dispatcher와 함께 사용하면 어떤 회사로든 순간이동할 수 있습니다. MCG Discord 서버의 ase 채널에서 사용법을 확인하세요.</value>
  </data>
  <data name="TaskDefs_SharePosition_1" xml:space="preserve">
    <value>위치 정보 내보내기</value>
  </data>
  <data name="Common_Message_Done_Title" xml:space="preserve">
    <value>완료</value>
  </data>
  <data name="Common_Message_Done_Message" xml:space="preserve">
    <value>완료되었습니다!</value>
  </data>
  <data name="Common_Message_Error_Message" xml:space="preserve">
    <value>알 수 없는 오류가 발생했습니다.</value>
  </data>
  <data name="Common_Message_Error_Title" xml:space="preserve">
    <value>오류</value>
  </data>
  <data name="Common_Message_Error_MessageDebug" xml:space="preserve">
    <value>오류가 발생했습니다.
{0}: {1}
개발자에게 문의해 주세요.</value>
  </data>
  <data name="Task_SpecialCCTask_HowToApply" xml:space="preserve">
    <value>** CC 데이터를 적용하는 방법 **
1. 'CC 데이터 적용'을 실행합니다.
2. 수신한 CC 데이터 파일 (*.ddd)을 선택합니다.

** 안내 **
- 데이터를 적용하는 것은 기존 프로필과 세이브를 변경하지 않습니다. 현재 프로필에 새로운 세이브를 추가할 뿐입니다.
- 이 도구를 사용해 추가된 차량은 매우 불안정합니다. 소속 차고가 없기 때문입니다. 이벤트가 완료된 뒤에는 반드시! '모든 CC 세이브 삭제'를 실행해 주세요.</value>
  </data>
  <data name="Task_SpecialCCTask_List_01Application" xml:space="preserve">
    <value>---- 적용 ----</value>
  </data>
  <data name="Task_SpecialCCTask_List_02Apply" xml:space="preserve">
    <value>이 프로필에 CC 데이터 적용</value>
  </data>
  <data name="Task_SpecialCCTask_List_03Delete" xml:space="preserve">
    <value>이 프로필에서 모든 CC 세이브 삭제</value>
  </data>
  <data name="Task_SpecialCCTask_List_04Generation" xml:space="preserve">
    <value>---- 제작 ----</value>
  </data>
  <data name="Task_SpecialCCTask_List_05ExportVehicle" xml:space="preserve">
    <value>활성 차량 내보내기</value>
  </data>
  <data name="Task_SpecialCCTask_List_06Compile" xml:space="preserve">
    <value>CC 데이터 컴파일</value>
  </data>
  <data name="Task_SpecialCCTask_List_07DLLInjection" xml:space="preserve">
    <value>DLL 인젝션 (개발자용)</value>
  </data>
  <data name="Task_SpecialCCTask_List_Title" xml:space="preserve">
    <value>ASE CC 도구</value>
  </data>
</root>